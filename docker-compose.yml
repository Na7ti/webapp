version: "3"

services:
  ### nginx ###############################################
  nginx:
    build:
      context: .
      dockerfile: nginx/Dockerfile
    container_name: nginx
    ports:
      - "443:443"
    depends_on:
      - app
    networks:
      - backend
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/www/web:/var/www/web

  ### node.js ###############################################
  app:
    build:
      context: .
      dockerfile: app/Dockerfile
    container_name: app
    volumes:
      - "./:/usr/src/app"
    ports:
      - "3000:3000"
    depends_on:
      - mysql
    environment:
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    networks:
      - backend
    command: [ "sh", "-c", "sleep 40 && npm run dev" ]

  ### mysql ################################################
  mysql:
    build:
      context: .
      dockerfile: mysql/Dockerfile
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_PASSWORD}
    networks:
      - backend

  ### certbot ################################################
  certbot:
    image: certbot/certbot:v1.7.0
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/www/web:/var/www/web
    command: [ "--version" ]

networks:
  backend:
